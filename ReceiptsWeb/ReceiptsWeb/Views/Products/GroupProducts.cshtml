@model PaginatedList<ReceiptsWeb.Models.GroupProducts>

@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer

@{
	ViewData["Title"] = SharedLocalizer["Group products"];
}

<h1>@ViewData["Title"]</h1>

<div class="modal fade" id="pricesModal" tabindex="-1" role="dialog" aria-labelledby="pricesModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content isResizable">
			<div class="modal-header draggable_touch">
				<h5 class="modal-title" id="pricesModalLabel">@SharedLocalizer["Prices history"]</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
				</button>
			</div>
			<div class="modal-body">
				<div id="partialPrices"></div>
			</div>
		</div>
	</div>
</div>
<br/>
<form asp-action="GroupProducts" method="get">
	<div class="form-actions no-color">
		<p>
			<label>@SharedLocalizer["Filter by group"] : </label>
			<select id="filterGroup" name="filterGroup" asp-items="@ViewBag.GroupList" onchange="onGroupChange()"></select>
			&nbsp;&nbsp;&nbsp;
			<label>@SharedLocalizer["Find by name"] : </label>
			<input type="text" id="SearchStringAutocomplete" name="SearchString" value="@ViewBag.searchString" autocomplete="off" />
		</p>
		<p>
			<label>@SharedLocalizer["Sort by"] : </label>
			<select name="sort" asp-items="@ViewBag.GroupProductsSortList"></select>
			&nbsp;&nbsp;&nbsp;
			<label>@Localizer["Include products with only one price"]</label>
			<input name="products1price" type='checkbox' @(ViewBag.products1price == "on" ? "checked" : "")>
		</p>
		<p>
		<button type="submit" class="btn btn-default btn-lg hoverblue" title="@SharedLocalizer["Search"]">
			<i class="bi bi-search"></i>
		</button>
			<a class="btn btn-default btn-lg hoverblue" asp-action="GroupProducts" title="@SharedLocalizer["Clear"]">
			<i class="bi bi-eraser"></i>
		</a>
	</div>

	<table class="table alternateLines">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.First().Group)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.First().Name)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.First().Min)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.First().Max)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.First().MinDate)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.First().MaxDate)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.First().PriceRatio)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.First().PricesCount)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Group)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Min)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Max)
					</td>
					<td>
						@item.MinDate.ToShortDateString()
					</td>
					<td>
						@item.MaxDate.ToShortDateString()
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.PriceRatio)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.PricesCount)
					</td>
					<td>
						<a asp-action="Details" asp-route-id="@item.Id" class="bi bi-info-circle" title="@SharedLocalizer["Details"]"></a>
						<button type="button" class="buttonAsLink displayProductsPrices bi bi-graph-up" value="@item.Id" title="@SharedLocalizer["Prices"]"></button>
					</td>
				</tr>
			}
		</tbody>
	</table>

	@{
		var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
		var nextDisabled = !Model.HasNextPage ? "disabled" : "";
		var firstDisabled = Model.PageIndex == 1 ? "disabled" : "";
		var lastDisabled = Model.PageIndex == Model.TotalPages ? "disabled" : "";
	}

	<input type="hidden" id="pageNumber" name="pageNumber" value="@Model.PageIndex" />

	@Model.PageIndex @SharedLocalizer["of"] @Model.TotalPages
	<a onclick="$('#pageNumber').val(1); this.closest('form').submit()"
	   class="btn btn-default @firstDisabled hoverblue">
		@SharedLocalizer["First"]
	</a>
	<a onclick="$('#pageNumber').val(@Model.PageIndex - 1); this.closest('form').submit()"
	   class="btn btn-default @prevDisabled hoverblue">
		@SharedLocalizer["Previous"]
	</a>
	<a onclick="$('#pageNumber').val(@Model.PageIndex + 1); this.closest('form').submit()"
	   class="btn btn-default @nextDisabled hoverblue">
		@SharedLocalizer["Next"]
	</a>
	<a onclick="$('#pageNumber').val(@Model.TotalPages); this.closest('form').submit()"
	   class="btn btn-default @lastDisabled hoverblue">
		@SharedLocalizer["Last"]
	</a>

	@SharedLocalizer["Page Size"] : <select name="pageSize" asp-items="@ViewBag.PageSizeList" onchange="$('#pageNumber').val(1); this.form.submit()"></select>
</form>

<link rel="stylesheet" href="~/lib/jquery-ui/dist/css/themes/smoothness/jquery-ui.css">
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-ui/dist/js/jquery-ui.min.js"></script>
<script src="~/lib/chart/dist/js/chart.min.js"></script>

<script>
	$(document).ready(function () {
		$(".displayProductsPrices").click(function () {
			$.ajax({
				url: "/Products/GetProductPrices",
				method: "GET",
				data: { id: this.value },
				success: function (data) {
					$("#partialPrices").html("");
					$("#partialPrices").html(data);

					$('#pricesModal').modal('show')
					$(".modal-dialog").draggable({
						cursor: "move",
						handle: ".modal-header",
					});
				}
			});
		});
	});
</script>

<script>
	@*Live search with jquery ui autocomplete*@
	$(document).ready(function () {
		$("#SearchStringAutocomplete").autocomplete({
			minLength: 0,
			source: function (request, response) {
				$.ajax({
					url: "/Products/LiveTagSearchJson",
					type: "POST",
					dataType: "json",
					data: { search: request.term, group: $('#filterGroup').val() },
					success: function (data) {
						response($.map(data, function (item) {
							//return { label: item.name, value: item.id };
							return item.name;
						}))
					}
				})
			}
		}).focus(function () {
			@*Show the list when input get focus*@
			$(this).autocomplete("search");
		});
	})

	@*Clear search value if group change and is not empty*@
	function onGroupChange() {
		if ($("#filterGroup").val() != '') {
			$("#SearchStringAutocomplete").val('')
		}
	}
</script>
