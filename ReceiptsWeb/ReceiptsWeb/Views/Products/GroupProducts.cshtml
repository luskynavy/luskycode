@* @model IEnumerable<ReceiptsWeb.Models.GroupProducts> *@
@model PaginatedList<ReceiptsWeb.Models.GroupProducts>

@{
    ViewData["Title"] = "Group products";
}

<h1>Group products</h1>

<div class="modal fade" id="pricesModal" tabindex="-1" role="dialog" aria-labelledby="pricesModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content isResizable">
            <div class="modal-header draggable_touch">
                <h5 class="modal-title" id="pricesModalLabel">Prices history</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="partialPrices"></div>
            </div>
        </div>
    </div>
</div>

<form asp-action="GroupProducts" method="get">
    <div class="form-actions no-color">
        <p>
            Filter by group : <select name="filterGroup" asp-items="@ViewBag.GroupList"></select>
        </p>
        <p>
            Find by name: <input type="text" id="SearchStringAutocomplete" name="SearchString" value="@ViewData["searchString"]" autocomplete="off" />
        </p>
        <p>
            Sort by : <select name="sort" asp-items="@ViewBag.GroupProductsSortList"></select>
        </p>
        <button type="submit" class="btn btn-default btn-lg" title="Search">
            <i class="bi bi-search"></i>
        </button>
        <a class="btn btn-default btn-lg" asp-action="GroupProducts" title="Clear">
            <i class="bi bi-eraser"></i>
        </a>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Group)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Min)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Max)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().MinDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().MaxDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PriceRatio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PricesCount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Group)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Min)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Max)
            </td>
            <td>
                @item.MinDate.ToShortDateString()
            </td>
            <td>
                @item.MaxDate.ToShortDateString()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PriceRatio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PricesCount)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id" class="bi bi-info-circle" title="Details"></a>
                <button class="buttonAsLink displayProductsPrices bi bi-graph-up" value="@item.Id" title="Prices"></button>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var firstDisabled = Model.PageIndex == 1 ? "disabled" : "";
    var lastDisabled = Model.PageIndex == Model.TotalPages ? "disabled" : "";
}
@Model.PageIndex of @Model.TotalPages
<a asp-action="GroupProducts"
   asp-route-searchString="@ViewData["searchString"]"
   asp-route-filterGroup="@ViewData["filterGroup"]"
   asp-route-sort="@ViewData["sort"]"
   asp-route-pageNumber="1"
   class="btn btn-default @firstDisabled">
    First
</a>
<a asp-action="GroupProducts"
   asp-route-searchString="@ViewData["searchString"]"
   asp-route-filterGroup="@ViewData["filterGroup"]"
   asp-route-sort="@ViewData["sort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="GroupProducts"
   asp-route-searchString="@ViewData["searchString"]"
   asp-route-filterGroup="@ViewData["filterGroup"]"
   asp-route-sort="@ViewData["sort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
<a href="@Url.Action("GroupProducts",
new {searchString = @ViewData["searchString"],
filterGroup=@ViewData["filterGroup"],
sort=@ViewData["sort"],
pageNumber=@Model.TotalPages})"
   class="btn btn-default @lastDisabled">
    Last
</a>
<form asp-action="GroupProducts" class="inline">
    <input type="hidden" name="searchString" value="@ViewData["searchString"]" />
    <input type="hidden" name="filterGroup" value="@ViewData["filterGroup"]" />
    <input type="hidden" name="sort" value="@ViewData["sort"]" />
Page Size :
<select name="pageSize" asp-items="@ViewBag.PageSizeList" onchange="this.form.submit()"></select>
</form>

<link rel="stylesheet" href="~/lib/jquery-ui/dist/css/themes/smoothness/jquery-ui.css">
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-ui/dist/js/jquery-ui.min.js"></script>
<script src="~/lib/chart/dist/js/chart.min.js"></script>

<script>
    $(document).ready(function () {
        $(".displayProductsPrices").click(function () {
            $.ajax({
                url: "/Products/GetProductPrices",
                method: "GET",
                data: { id: this.value },
                success: function (data) {
                    $("#partialPrices").html("");
                    $("#partialPrices").html(data);

                    $('#pricesModal').modal('show')
                    $(".modal-dialog").draggable({
                        cursor: "move",
                        handle: ".modal-header",
                    });
                }
            });
        });
    });
</script>

<script>
    //Live search with jquery ui autocomplete
    $(document).ready(function () {
        $("#SearchStringAutocomplete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Products/LiveTagSearchJson",
                    type: "POST",
                    dataType: "json",
                    data: { search: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            //return { label: item.name, value: item.id };
                            return item.name;
                        }))
                    }
                })
            }
        });
    })
</script>
