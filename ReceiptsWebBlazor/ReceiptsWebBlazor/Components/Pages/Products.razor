@page "/products"
@rendermode InteractiveServer
@inject IDbContextFactory<ReceiptsContext> DbFactory

<PageTitle>Products</PageTitle>

<h1>Products</h1>


@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Group</th>
                <th>Name</th>
                <th>Price</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Group</td>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.DateReceipt.ToShortDateString()</td>
                    <td>
                        <a title="Details" href="details/@product.Id" style="text-decoration:none">
                            &nbsp;🔍&nbsp;
                        </a>
                        @* <a title="Edit" href="edit/@product.Id" style="text-decoration:none">
                            &nbsp;📝&nbsp;
                        </a> *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    // The products list
    private Product[]? products;

    // Navigated
    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        products = await context.Products.Take(10).ToArrayAsync();
    }
}
