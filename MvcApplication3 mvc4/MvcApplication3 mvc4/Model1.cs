//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Database1Model", "FK_Borrowed_Book", "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MvcApplication3_mvc4.Book), "Borrowed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcApplication3_mvc4.Borrowed), true)]

#endregion

namespace MvcApplication3_mvc4
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Database1Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Database1Entities object using the connection string found in the 'Database1Entities' section of the application configuration file.
        /// </summary>
        public Database1Entities() : base("name=Database1Entities", "Database1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Database1Entities object.
        /// </summary>
        public Database1Entities(string connectionString) : base(connectionString, "Database1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Database1Entities object.
        /// </summary>
        public Database1Entities(EntityConnection connection) : base(connection, "Database1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Book> Book
        {
            get
            {
                if ((_Book == null))
                {
                    _Book = base.CreateObjectSet<Book>("Book");
                }
                return _Book;
            }
        }
        private ObjectSet<Book> _Book;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Borrowed> Borrowed
        {
            get
            {
                if ((_Borrowed == null))
                {
                    _Borrowed = base.CreateObjectSet<Borrowed>("Borrowed");
                }
                return _Borrowed;
            }
        }
        private ObjectSet<Borrowed> _Borrowed;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Book EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBook(Book book)
        {
            base.AddObject("Book", book);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Borrowed EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBorrowed(Borrowed borrowed)
        {
            base.AddObject("Borrowed", borrowed);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Database1Model", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Book CreateBook(global::System.Int32 id)
        {
            Book book = new Book();
            book.id = id;
            return book;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String note
        {
            get
            {
                return _note;
            }
            set
            {
                OnnoteChanging(value);
                ReportPropertyChanging("note");
                _note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("note");
                OnnoteChanged();
            }
        }
        private global::System.String _note;
        partial void OnnoteChanging(global::System.String value);
        partial void OnnoteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Database1Model", "FK_Borrowed_Book", "Borrowed")]
        public EntityCollection<Borrowed> Borrowed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Borrowed>("Database1Model.FK_Borrowed_Book", "Borrowed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Borrowed>("Database1Model.FK_Borrowed_Book", "Borrowed", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Database1Model", Name="Borrowed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Borrowed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Borrowed object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="bookId">Initial value of the bookId property.</param>
        public static Borrowed CreateBorrowed(global::System.Int32 id, global::System.Int32 bookId)
        {
            Borrowed borrowed = new Borrowed();
            borrowed.id = id;
            borrowed.bookId = bookId;
            return borrowed;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 bookId
        {
            get
            {
                return _bookId;
            }
            set
            {
                OnbookIdChanging(value);
                ReportPropertyChanging("bookId");
                _bookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bookId");
                OnbookIdChanged();
            }
        }
        private global::System.Int32 _bookId;
        partial void OnbookIdChanging(global::System.Int32 value);
        partial void OnbookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private Nullable<global::System.DateTime> _date;
        partial void OndateChanging(Nullable<global::System.DateTime> value);
        partial void OndateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Database1Model", "FK_Borrowed_Book", "Book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("Database1Model.FK_Borrowed_Book", "Book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("Database1Model.FK_Borrowed_Book", "Book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("Database1Model.FK_Borrowed_Book", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("Database1Model.FK_Borrowed_Book", "Book", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
